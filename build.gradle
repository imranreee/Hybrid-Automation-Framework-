plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation platform('org.junit:junit-bom:5.9.1')
    implementation 'org.junit.jupiter:junit-jupiter'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'
    implementation 'org.json:json:20160810'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.5.3'
    implementation 'io.github.bonigarcia:webdrivermanager:5.1.0'
    implementation group: 'org.testng', name: 'testng', version: '6.14.3'
    implementation group: 'org.apache.poi', name: 'poi', version: '3.9'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '3.9'
    implementation 'io.cucumber:cucumber-java:6.10.0'
    implementation 'io.cucumber:cucumber-testng:6.10.0'
    implementation 'io.rest-assured:rest-assured:4.5.0'
    implementation group: 'io.appium', name: 'java-client', version: '8.3.0'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.10'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.19'
}

test {
    useJUnitPlatform()
}

/*task automationWebTest(type: Test) {
    useTestNG() {
        useDefaultListeners = true
        scanForTestClasses = false
        testLogging.showStandardStreams = true
        systemProperties project.properties.subMap(["Type"])
        String testValue = System.getProperty("Type");
        System.out.println(testValue)

        *//*if(testValue.equals("singleBrowserTest")){
            suites "src/test/singleBrowser.xml"
        }else if(testValue.equals("hyrTest")){
            suites "src/test/runHyr.xml"
        }
        else if(testValue.equals("ccrun")){
            suites "src/test/cucumberRun.xml"
        }*//*
        if(testValue.equals("xyzbank")){
            suites "src/test/xyzBankRun.xml"
        }else if(testValue.equals("api")){
            suites "src/test/runAPI.xml"
        }
    }
}

task automationAPITest(type: Test) {
    useTestNG() {
        useDefaultListeners = true
        scanForTestClasses = false
        testLogging.showStandardStreams = true
        systemProperties project.properties.subMap(["Type"])
        String testValue = System.getProperty("Type");
        System.out.println(testValue)

        *//*if(testValue.equals("singleBrowserTest")){
            suites "src/test/singleBrowser.xml"
        }else if(testValue.equals("hyrTest")){
            suites "src/test/runHyr.xml"
        }
        else if(testValue.equals("ccrun")){
            suites "src/test/cucumberRun.xml"
        }*//*
        if(testValue.equals("xyzbank")){
            suites "src/test/xyzBankRun.xml"
        }else if(testValue.equals("api")){
            suites "src/test/runAPI.xml"
        }
    }
}*/

task automationMobileTest(type: Test) {
    useTestNG() {
        useDefaultListeners = true
        scanForTestClasses = false
        testLogging.showStandardStreams = true
        systemProperties project.properties.subMap(["Type"])
        String testValue = System.getProperty("Type");
        System.out.println(testValue)

        if(testValue.equals("and")){
            suites "src/test/runAnd.xml"
        }else if(testValue.equals("xyzbank")){
            suites "src/test/xyzBankRun.xml"
        }
    }
}